<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <!--实体扫描注释-->
    <context:component-scan base-package="com.sz">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--文件上传解析器-->
    <!--id固定，因为在源代码里面写死了-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10240000000000"/>
        <!--我把编码设置为ISO-8859-1依然没有任何乱码
        可能会自动识别编码，自动转换-->
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSizePerFile" value="200000000000"/>
    </bean>

    <!--servlet3.0新特性-->
    <!--定义上传大小限制，要在web.xml里面-->

    <!--<bean id="multipartResolver1" -->
    <!--class="org.springframework.web.multipart.support.StandardServletMultipartResolver">-->
    <!--</bean>-->





    <!--因为我注册前端控制器的时候，截获的格式是“/”
     所以我jsp里面的js和css路径被当成了请求，去Controller找
    下面注释可以让我的js和css文件用默认servlet处理，而不是DispatcherServlet处理
    -->
    <mvc:default-servlet-handler/>
    <!--用下面的标签效果相同，不过需要一条一条映射，麻烦-->
    <!--<mvc:resources mapping="" location=""/>-->

    <!--<mvc:default-servlet-handler/> 导致扫包失效，用MVC驱动可以解决-->
    <mvc:annotation-driven>
        <!--<mvc:message-converters>-->
            <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
                <!--<property name="supportedMediaTypes">-->
                    <!--<list>-->
                        <!--<value>application/json.charset=UTF-8</value>-->
                    <!--</list>-->
                <!--</property>-->
            <!--</bean>-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
        <!--</mvc:message-converters>-->
    </mvc:annotation-driven>

</beans>